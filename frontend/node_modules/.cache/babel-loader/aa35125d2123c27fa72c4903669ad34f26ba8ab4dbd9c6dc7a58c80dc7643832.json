{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub Projects\\\\Ayurvedic Product Distribution System\\\\Online-Ayurvedic-Product-Distribution-System\\\\frontend\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Navigate, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useModal } from '../../context/ModalContext';\n\n// Component to protect routes based on authentication and role\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  allowedRoles\n}) => {\n  _s();\n  const context = useContext(AuthContext);\n  const {\n    currentUser,\n    token,\n    loading\n  } = context || {\n    currentUser: null,\n    token: null,\n    loading: false\n  };\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    openModal\n  } = useModal();\n\n  // If still loading auth state, don't render anything yet\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Handle unauthenticated users\n  useEffect(() => {\n    if (!token || !currentUser) {\n      openModal({\n        title: 'Authentication Required',\n        message: 'You need to log in to access this page.',\n        confirmText: 'Log In',\n        type: 'info',\n        onConfirm: () => navigate('/login', {\n          state: {\n            from: location\n          }\n        })\n      });\n    }\n  }, [token, currentUser, location, navigate, openModal]);\n\n  // Handle unauthorized access\n  useEffect(() => {\n    if (token && currentUser && allowedRoles && !allowedRoles.includes(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role)) {\n      openModal({\n        title: 'Access Denied',\n        message: 'You do not have permission to access this page.',\n        confirmText: 'OK',\n        type: 'warning',\n        onConfirm: () => navigate('/unauthorized')\n      });\n    }\n  }, [token, currentUser, allowedRoles, navigate, openModal]);\n\n  // Check if user is authenticated\n  if (!token || !currentUser) {\n    // Redirect to login page, but save the location they were trying to access\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If roles are specified, check if user has required role\n  if (allowedRoles && !allowedRoles.includes(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role)) {\n    // Redirect to unauthorized page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n\n  // User is authenticated and has the required role, render the protected component\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"nHhyCL0gOL5FucN/xSsOjgGp630=\", false, function () {\n  return [useLocation, useNavigate, useModal];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","useEffect","Navigate","Outlet","useLocation","useNavigate","AuthContext","useModal","jsxDEV","_jsxDEV","PrivateRoute","allowedRoles","_s","context","currentUser","token","loading","location","navigate","openModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","message","confirmText","type","onConfirm","state","from","includes","role","to","replace","_c","$RefreshReg$"],"sources":["D:/GitHub Projects/Ayurvedic Product Distribution System/Online-Ayurvedic-Product-Distribution-System/frontend/src/components/routing/PrivateRoute.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Navigate, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useModal } from '../../context/ModalContext';\n\n// Component to protect routes based on authentication and role\nconst PrivateRoute = ({ allowedRoles }) => {\n  const context = useContext(AuthContext);\n  const { currentUser, token, loading } = context || { currentUser: null, token: null, loading: false };\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { openModal } = useModal();\n\n  // If still loading auth state, don't render anything yet\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"></div>\n      </div>\n    );\n  }\n\n  // Handle unauthenticated users\n  useEffect(() => {\n    if (!token || !currentUser) {\n      openModal({\n        title: 'Authentication Required',\n        message: 'You need to log in to access this page.',\n        confirmText: 'Log In',\n        type: 'info',\n        onConfirm: () => navigate('/login', { state: { from: location } })\n      });\n    }\n  }, [token, currentUser, location, navigate, openModal]);\n\n  // Handle unauthorized access\n  useEffect(() => {\n    if (token && currentUser && allowedRoles && !allowedRoles.includes(currentUser?.role)) {\n      openModal({\n        title: 'Access Denied',\n        message: 'You do not have permission to access this page.',\n        confirmText: 'OK',\n        type: 'warning',\n        onConfirm: () => navigate('/unauthorized')\n      });\n    }\n  }, [token, currentUser, allowedRoles, navigate, openModal]);\n\n  // Check if user is authenticated\n  if (!token || !currentUser) {\n    // Redirect to login page, but save the location they were trying to access\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // If roles are specified, check if user has required role\n  if (allowedRoles && !allowedRoles.includes(currentUser?.role)) {\n    // Redirect to unauthorized page\n    return <Navigate to=\"/unauthorized\" replace />;\n  }\n\n  // User is authenticated and has the required role, render the protected component\n  return <Outlet />;\n};\n\nexport default PrivateRoute;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}