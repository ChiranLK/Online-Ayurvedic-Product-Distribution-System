{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub Projects\\\\Ayurvedic Product Distribution System\\\\Online-Ayurvedic-Product-Distribution-System\\\\frontend\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Navigate, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useModal } from '../../context/ModalContext';\n\n// Component to protect routes based on authentication and role\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  allowedRoles\n}) => {\n  _s();\n  const context = useContext(AuthContext);\n  const {\n    currentUser,\n    token,\n    loading\n  } = context || {\n    currentUser: null,\n    token: null,\n    loading: false\n  };\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    openModal\n  } = useModal();\n  const [showModal, setShowModal] = useState(false);\n\n  // Show modal for authentication issues\n  useEffect(() => {\n    // Don't show modals during loading\n    if (loading) return;\n\n    // Handle different scenarios\n    if (!token || !currentUser) {\n      // Only show modal once\n      if (!showModal) {\n        setShowModal(true);\n        openModal({\n          title: 'Authentication Required',\n          message: 'You need to log in to access this page.',\n          confirmText: 'Log In',\n          type: 'info',\n          onConfirm: () => navigate('/login', {\n            state: {\n              from: location\n            }\n          })\n        });\n      }\n    } else if (allowedRoles && !allowedRoles.includes(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role)) {\n      // Only show modal once\n      if (!showModal) {\n        setShowModal(true);\n        openModal({\n          title: 'Access Denied',\n          message: 'You do not have permission to access this page.',\n          confirmText: 'OK',\n          type: 'warning',\n          onConfirm: () => navigate('/unauthorized')\n        });\n      }\n    }\n  }, [token, currentUser, allowedRoles, location, navigate, openModal, showModal, loading]);\n\n  // Loading indicator\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Handle authentication checks\n  if (!token || !currentUser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Handle role checks\n  if (allowedRoles && !allowedRoles.includes(currentUser === null || currentUser === void 0 ? void 0 : currentUser.role)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n\n  // All checks passed, render the protected content\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"fCt3VwZ6lYty6La56pwfxAE52pM=\", false, function () {\n  return [useLocation, useNavigate, useModal];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Navigate","Outlet","useLocation","useNavigate","AuthContext","useModal","jsxDEV","_jsxDEV","PrivateRoute","allowedRoles","_s","context","currentUser","token","loading","location","navigate","openModal","showModal","setShowModal","title","message","confirmText","type","onConfirm","state","from","includes","role","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["D:/GitHub Projects/Ayurvedic Product Distribution System/Online-Ayurvedic-Product-Distribution-System/frontend/src/components/routing/PrivateRoute.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Navigate, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useModal } from '../../context/ModalContext';\n\n// Component to protect routes based on authentication and role\nconst PrivateRoute = ({ allowedRoles }) => {\n  const context = useContext(AuthContext);\n  const { currentUser, token, loading } = context || { currentUser: null, token: null, loading: false };\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { openModal } = useModal();\n  const [showModal, setShowModal] = useState(false);\n\n  // Show modal for authentication issues\n  useEffect(() => {\n    // Don't show modals during loading\n    if (loading) return;\n    \n    // Handle different scenarios\n    if (!token || !currentUser) {\n      // Only show modal once\n      if (!showModal) {\n        setShowModal(true);\n        openModal({\n          title: 'Authentication Required',\n          message: 'You need to log in to access this page.',\n          confirmText: 'Log In',\n          type: 'info',\n          onConfirm: () => navigate('/login', { state: { from: location } })\n        });\n      }\n    } else if (allowedRoles && !allowedRoles.includes(currentUser?.role)) {\n      // Only show modal once\n      if (!showModal) {\n        setShowModal(true);\n        openModal({\n          title: 'Access Denied',\n          message: 'You do not have permission to access this page.',\n          confirmText: 'OK',\n          type: 'warning',\n          onConfirm: () => navigate('/unauthorized')\n        });\n      }\n    }\n  }, [token, currentUser, allowedRoles, location, navigate, openModal, showModal, loading]);\n\n  // Loading indicator\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"></div>\n      </div>\n    );\n  }\n\n  // Handle authentication checks\n  if (!token || !currentUser) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Handle role checks\n  if (allowedRoles && !allowedRoles.includes(currentUser?.role)) {\n    return <Navigate to=\"/unauthorized\" replace />;\n  }\n\n  // All checks passed, render the protected content\n  return <Outlet />;\n};\n\nexport default PrivateRoute;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}