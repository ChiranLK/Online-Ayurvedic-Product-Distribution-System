{"ast":null,"code":"import React,{useContext}from'react';import{Navigate}from'react-router-dom';import{AuthContext}from'../../context/AuthContext';import AdminDashboard from'./AdminDashboard';import SellerDashboard from'./SellerDashboard';import CustomerDashboard from'./CustomerDashboard';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const context=useContext(AuthContext);const{currentUser,token}=context||{currentUser:null,token:null};const navigate=useNavigate();// Determine if user is authenticated based on token\nconst isAuthenticated=!!token;// Redirect to login if not authenticated\nif(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}// Show loading state while user data is being fetched\nif(isAuthenticated&&!currentUser){return/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center items-center min-h-screen\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3 text-lg\",children:\"Loading user data...\"})]});}// Render appropriate dashboard based on user role with null safety\nif((currentUser===null||currentUser===void 0?void 0:currentUser.role)==='admin'){return/*#__PURE__*/_jsx(AdminDashboard,{});}else if((currentUser===null||currentUser===void 0?void 0:currentUser.role)==='seller'){return/*#__PURE__*/_jsx(SellerDashboard,{});}else if((currentUser===null||currentUser===void 0?void 0:currentUser.role)==='customer'){return/*#__PURE__*/_jsx(CustomerDashboard,{});}else{// Handle undefined/null role\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/unauthorized\"});}};export default Dashboard;","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","AdminDashboard","SellerDashboard","CustomerDashboard","useNavigate","jsx","_jsx","jsxs","_jsxs","Dashboard","context","currentUser","token","navigate","isAuthenticated","to","className","children","role"],"sources":["d:/GitHub Projects/Ayurvedic Product Distribution System/Online-Ayurvedic-Product-Distribution-System/frontend/src/components/dashboard/Dashboard.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport AdminDashboard from './AdminDashboard';\nimport SellerDashboard from './SellerDashboard';\nimport CustomerDashboard from './CustomerDashboard';\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {\n  const context = useContext(AuthContext);\n  const { currentUser, token } = context || { currentUser: null, token: null };\n  const navigate = useNavigate();\n  \n  // Determine if user is authenticated based on token\n  const isAuthenticated = !!token;\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  // Show loading state while user data is being fetched\n  if (isAuthenticated && !currentUser) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-500\"></div>\n        <div className=\"ml-3 text-lg\">Loading user data...</div>\n      </div>\n    );\n  }\n\n  // Render appropriate dashboard based on user role with null safety\n  if (currentUser?.role === 'admin') {\n    return <AdminDashboard />;\n  } else if (currentUser?.role === 'seller') {\n    return <SellerDashboard />;\n  } else if (currentUser?.role === 'customer') {\n    return <CustomerDashboard />;\n  } else {\n    // Handle undefined/null role\n    return <Navigate to=\"/unauthorized\" />;\n  }\n};\n\nexport default Dashboard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,2BAA2B,CACvD,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,iBAAiB,KAAM,qBAAqB,CACnD,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAAC,OAAO,CAAGZ,UAAU,CAACE,WAAW,CAAC,CACvC,KAAM,CAAEW,WAAW,CAAEC,KAAM,CAAC,CAAGF,OAAO,EAAI,CAAEC,WAAW,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAC5E,KAAM,CAAAC,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAU,eAAe,CAAG,CAAC,CAACF,KAAK,CAE/B;AACA,GAAI,CAACE,eAAe,CAAE,CACpB,mBAAOR,IAAA,CAACP,QAAQ,EAACgB,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA;AACA,GAAID,eAAe,EAAI,CAACH,WAAW,CAAE,CACnC,mBACEH,KAAA,QAAKQ,SAAS,CAAC,+CAA+C,CAAAC,QAAA,eAC5DX,IAAA,QAAKU,SAAS,CAAC,4EAA4E,CAAM,CAAC,cAClGV,IAAA,QAAKU,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,sBAAoB,CAAK,CAAC,EACrD,CAAC,CAEV,CAEA;AACA,GAAI,CAAAN,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEO,IAAI,IAAK,OAAO,CAAE,CACjC,mBAAOZ,IAAA,CAACL,cAAc,GAAE,CAAC,CAC3B,CAAC,IAAM,IAAI,CAAAU,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEO,IAAI,IAAK,QAAQ,CAAE,CACzC,mBAAOZ,IAAA,CAACJ,eAAe,GAAE,CAAC,CAC5B,CAAC,IAAM,IAAI,CAAAS,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEO,IAAI,IAAK,UAAU,CAAE,CAC3C,mBAAOZ,IAAA,CAACH,iBAAiB,GAAE,CAAC,CAC9B,CAAC,IAAM,CACL;AACA,mBAAOG,IAAA,CAACP,QAAQ,EAACgB,EAAE,CAAC,eAAe,CAAE,CAAC,CACxC,CACF,CAAC,CAED,cAAe,CAAAN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}