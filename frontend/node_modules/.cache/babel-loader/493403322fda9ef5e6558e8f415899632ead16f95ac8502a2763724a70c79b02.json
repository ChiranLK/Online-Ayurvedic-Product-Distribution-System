{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import axios from'axios';import api from'../config/api';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token')||null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Configure axios to use token\nuseEffect(()=>{if(token){axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);}else{delete axios.defaults.headers.common['Authorization'];}},[token]);// Load user on initial load\nuseEffect(()=>{const loadUser=async()=>{if(!token){setLoading(false);return;}try{const res=await api.get('/api/auth/me');setCurrentUser(res.data.data);}catch(err){console.error('Error loading user:',err);// If token is invalid or expired, clear it\nlocalStorage.removeItem('token');setToken(null);}finally{setLoading(false);}};loadUser();},[token]);// Register user\nconst register=async userData=>{try{setLoading(true);setError(null);console.log('Registering user with data:',userData);const res=await api.post('/api/auth/register',userData);console.log('Registration response:',res.data);// Check if the response contains token and user\nif(!res.data.token||!res.data.user){console.error('Invalid response format:',res.data);setError('Registration failed: Invalid server response');throw new Error('Invalid response format');}const{token,user}=res.data;// Save token to localStorage\nlocalStorage.setItem('token',token);setToken(token);setCurrentUser(user);return user;}catch(err){console.error('Registration error:',err);// More detailed error handling\nif(err.response){console.error('Error response:',err.response.data);setError(err.response.data.message||'Registration failed: Server error');}else if(err.request){console.error('No response received:',err.request);setError('Registration failed: No response from server. Please check if the backend is running.');}else{console.error('Error setting up request:',err.message);setError(\"Registration failed: \".concat(err.message));}throw err;}finally{setLoading(false);}};// Login user\nconst login=async(email,password)=>{try{setLoading(true);setError(null);const res=await api.post('/api/auth/login',{email,password});const{token,user}=res.data;// Save token to localStorage\nlocalStorage.setItem('token',token);setToken(token);setCurrentUser(user);return user;}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Login failed');throw err;}finally{setLoading(false);}};// Logout user\nconst logout=()=>{localStorage.removeItem('token');setToken(null);setCurrentUser(null);};// Check if user has a specific role\nconst hasRole=roles=>{if(!currentUser||!currentUser.role)return false;if(Array.isArray(roles)){return roles.includes(currentUser.role);}return currentUser.role===roles;};// Check if current user is admin\nconst isAdmin=()=>hasRole('admin');// Check if current user is seller\nconst isSeller=()=>hasRole('seller');// Check if current user is customer\nconst isCustomer=()=>hasRole('customer');// Computed property to determine authentication status\nconst authenticated=!!token&&!!currentUser;return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{currentUser,token,loading,error,isAuthenticated:authenticated,register,login,logout,hasRole,isAdmin,isSeller,isCustomer,setError},children:children});};export default AuthProvider;","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","currentUser","setCurrentUser","token","setToken","localStorage","getItem","loading","setLoading","error","setError","defaults","headers","common","concat","loadUser","res","get","data","err","console","removeItem","register","userData","log","post","user","Error","setItem","response","message","request","login","email","password","_err$response","_err$response$data","logout","hasRole","roles","role","Array","isArray","includes","isAdmin","isSeller","isCustomer","authenticated","Provider","value","isAuthenticated"],"sources":["d:/GitHub Projects/Ayurvedic Product Distribution System/Online-Ayurvedic-Product-Distribution-System/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport api from '../config/api';\n\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Configure axios to use token\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Load user on initial load\n  useEffect(() => {\n    const loadUser = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const res = await api.get('/api/auth/me');\n        setCurrentUser(res.data.data);\n      } catch (err) {\n        console.error('Error loading user:', err);\n        // If token is invalid or expired, clear it\n        localStorage.removeItem('token');\n        setToken(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUser();\n  }, [token]);\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      console.log('Registering user with data:', userData);\n      const res = await api.post('/api/auth/register', userData);\n      console.log('Registration response:', res.data);\n      \n      // Check if the response contains token and user\n      if (!res.data.token || !res.data.user) {\n        console.error('Invalid response format:', res.data);\n        setError('Registration failed: Invalid server response');\n        throw new Error('Invalid response format');\n      }\n      \n      const { token, user } = res.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', token);\n      setToken(token);\n      setCurrentUser(user);\n      \n      return user;\n    } catch (err) {\n      console.error('Registration error:', err);\n      // More detailed error handling\n      if (err.response) {\n        console.error('Error response:', err.response.data);\n        setError(err.response.data.message || 'Registration failed: Server error');\n      } else if (err.request) {\n        console.error('No response received:', err.request);\n        setError('Registration failed: No response from server. Please check if the backend is running.');\n      } else {\n        console.error('Error setting up request:', err.message);\n        setError(`Registration failed: ${err.message}`);\n      }\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const res = await api.post('/api/auth/login', { email, password });\n      \n      const { token, user } = res.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', token);\n      setToken(token);\n      setCurrentUser(user);\n      \n      return user;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setCurrentUser(null);\n  };\n\n  // Check if user has a specific role\n  const hasRole = (roles) => {\n    if (!currentUser || !currentUser.role) return false;\n    \n    if (Array.isArray(roles)) {\n      return roles.includes(currentUser.role);\n    }\n    \n    return currentUser.role === roles;\n  };\n\n  // Check if current user is admin\n  const isAdmin = () => hasRole('admin');\n  \n  // Check if current user is seller\n  const isSeller = () => hasRole('seller');\n  \n  // Check if current user is customer\n  const isCustomer = () => hasRole('customer');\n\n  // Computed property to determine authentication status\n  const authenticated = !!token && !!currentUser;\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        token,\n        loading,\n        error,\n        isAuthenticated: authenticated,\n        register,\n        login,\n        logout,\n        hasRole,\n        isAdmin,\n        isSeller,\n        isCustomer,\n        setError\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}