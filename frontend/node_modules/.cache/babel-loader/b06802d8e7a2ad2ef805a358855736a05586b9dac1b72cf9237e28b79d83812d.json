{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst API_BASE_URL = 'http://localhost:5000'; // Backend port 5000\nconsole.log('API Base URL:', API_BASE_URL);\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Add request interceptor to include auth token if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","console","log","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization"],"sources":["D:/GitHub Projects/Ayurvedic Product Distribution System/Online-Ayurvedic-Product-Distribution-System/frontend/src/config/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst API_BASE_URL = 'http://localhost:5000'; // Backend port 5000\nconsole.log('API Base URL:', API_BASE_URL);\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// Add request interceptor to include auth token if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;AAC9CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,YAAY,CAAC;AAE1C,MAAMG,GAAG,GAAGJ,KAAK,CAACK,MAAM,CAAC;EACvBC,OAAO,EAAEL;AACX,CAAC,CAAC;;AAEF;AACAG,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}